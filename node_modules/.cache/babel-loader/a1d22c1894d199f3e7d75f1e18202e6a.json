{"ast":null,"code":"import _slicedToArray from \"/home/mwiemers/dev/Hangman/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _taggedTemplateLiteral from \"/home/mwiemers/dev/Hangman/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";\n\nvar _jsxFileName = \"/home/mwiemers/dev/Hangman/src/components/WordLine.tsx\",\n    _templateObject,\n    _templateObject2,\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar StyledLetter = styled.p(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  font-size: 40px;\\n  width: 40px;\\n  margin-bottom: 5px;\\n  margin-top: 0;\\n  color: \", \";\\n  border-bottom: black solid 2px;\\n\\n  ::selection {\\n    background: transparent;\\n    visibility: hidden;\\n  }\\n\"])), function (_ref) {\n  var visible = _ref.visible;\n  return visible ? 'black' : 'transparent';\n});\n_c = StyledLetter;\nvar StyledLine = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  display: flex;\\n  width: 100%;\\n  justify-content: center;\\n  align-items: flex-end;\\n  column-gap: 10px;\\n  height: 60px;\\n\"])));\n_c2 = StyledLine;\n\nvar WordLine = function WordLine(_ref2) {\n  _s();\n\n  var winWord = _ref2.winWord,\n      finalWord = _ref2.finalWord;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      word = _useState2[0],\n      setWord = _useState2[1];\n\n  useEffect(function () {\n    var wordArray = Object.assign([], winWord);\n    setWord(wordArray);\n  }, [winWord]);\n  var letters = word.map(function (letter, index) {\n    return /*#__PURE__*/_jsxDEV(StyledLetter, {\n      visible: finalWord.includes(letter.toUpperCase()),\n      children: letter.toUpperCase()\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, _this);\n  });\n  return /*#__PURE__*/_jsxDEV(StyledLine, {\n    children: letters\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(WordLine, \"YFyHxXm07Rk3ALqKHbk9IOuJJQM=\");\n\n_c3 = WordLine;\nexport default WordLine;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledLetter\");\n$RefreshReg$(_c2, \"StyledLine\");\n$RefreshReg$(_c3, \"WordLine\");","map":{"version":3,"names":["useEffect","useState","styled","StyledLetter","p","visible","StyledLine","div","WordLine","winWord","finalWord","word","setWord","wordArray","Object","assign","letters","map","letter","index","includes","toUpperCase"],"sources":["/home/mwiemers/dev/Hangman/src/components/WordLine.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\ntype Props = {\n  winWord: string;\n  finalWord: string[];\n};\n\ntype StyleProps = {\n  visible: boolean;\n};\n\nconst StyledLetter = styled.p`\n  font-size: 40px;\n  width: 40px;\n  margin-bottom: 5px;\n  margin-top: 0;\n  color: ${({ visible }: StyleProps) => (visible ? 'black' : 'transparent')};\n  border-bottom: black solid 2px;\n\n  ::selection {\n    background: transparent;\n    visibility: hidden;\n  }\n`;\n\nconst StyledLine = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  align-items: flex-end;\n  column-gap: 10px;\n  height: 60px;\n`;\n\nconst WordLine = ({ winWord, finalWord }: Props) => {\n  const [word, setWord] = useState<string[]>([]);\n\n  useEffect(() => {\n    const wordArray = Object.assign([], winWord);\n    setWord(wordArray);\n  }, [winWord]);\n\n  const letters = word.map((letter, index) => (\n    <StyledLetter\n      key={index}\n      visible={finalWord.includes(letter.toUpperCase())}\n    >\n      {letter.toUpperCase()}\n    </StyledLetter>\n  ));\n\n  return <StyledLine>{letters}</StyledLine>;\n};\n\nexport default WordLine;\n"],"mappings":";;;;;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAWA,IAAMC,YAAY,GAAGD,MAAM,CAACE,CAAV,uRAKP;EAAA,IAAGC,OAAH,QAAGA,OAAH;EAAA,OAA8BA,OAAO,GAAG,OAAH,GAAa,aAAlD;AAAA,CALO,CAAlB;KAAMF,Y;AAcN,IAAMG,UAAU,GAAGJ,MAAM,CAACK,GAAV,uMAAhB;MAAMD,U;;AASN,IAAME,QAAQ,GAAG,SAAXA,QAAW,QAAmC;EAAA;;EAAA,IAAhCC,OAAgC,SAAhCA,OAAgC;EAAA,IAAvBC,SAAuB,SAAvBA,SAAuB;;EAClD,gBAAwBT,QAAQ,CAAW,EAAX,CAAhC;EAAA;EAAA,IAAOU,IAAP;EAAA,IAAaC,OAAb;;EAEAZ,SAAS,CAAC,YAAM;IACd,IAAMa,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,OAAlB,CAAlB;IACAG,OAAO,CAACC,SAAD,CAAP;EACD,CAHQ,EAGN,CAACJ,OAAD,CAHM,CAAT;EAKA,IAAMO,OAAO,GAAGL,IAAI,CAACM,GAAL,CAAS,UAACC,MAAD,EAASC,KAAT;IAAA,oBACvB,QAAC,YAAD;MAEE,OAAO,EAAET,SAAS,CAACU,QAAV,CAAmBF,MAAM,CAACG,WAAP,EAAnB,CAFX;MAAA,UAIGH,MAAM,CAACG,WAAP;IAJH,GACOF,KADP;MAAA;MAAA;MAAA;IAAA,SADuB;EAAA,CAAT,CAAhB;EASA,oBAAO,QAAC,UAAD;IAAA,UAAaH;EAAb;IAAA;IAAA;IAAA;EAAA,SAAP;AACD,CAlBD;;GAAMR,Q;;MAAAA,Q;AAoBN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}