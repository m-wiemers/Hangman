{"ast":null,"code":"import _slicedToArray from\"/home/mwiemers/dev/Hangman/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _taggedTemplateLiteral from\"/home/mwiemers/dev/Hangman/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2;import{useEffect,useState}from'react';import styled from'styled-components';import{jsx as _jsx}from\"react/jsx-runtime\";var StyledLetter=styled.p(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  font-size: 40px;\\n  width: 40px;\\n  margin-bottom: 5px;\\n  margin-top: 0;\\n  color: \",\";\\n  border-bottom: black solid 2px;\\n\\n  ::selection {\\n    background: transparent;\\n    visibility: hidden;\\n  }\\n\"])),function(_ref){var visible=_ref.visible;return visible?'black':'transparent';});var StyledLine=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: flex;\\n  width: 100%;\\n  justify-content: center;\\n  align-items: flex-end;\\n  column-gap: 10px;\\n  height: 60px;\\n\"])));var WordLine=function WordLine(_ref2){var winWord=_ref2.winWord,finalWord=_ref2.finalWord;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),word=_useState2[0],setWord=_useState2[1];useEffect(function(){var wordArray=Object.assign([],winWord);setWord(wordArray);},[winWord]);var letters=word.map(function(letter,index){return/*#__PURE__*/_jsx(StyledLetter,{visible:finalWord.includes(letter.toUpperCase()),children:letter.toUpperCase()},index);});return/*#__PURE__*/_jsx(StyledLine,{children:letters});};export default WordLine;","map":{"version":3,"names":["useEffect","useState","styled","StyledLetter","p","visible","StyledLine","div","WordLine","winWord","finalWord","word","setWord","wordArray","Object","assign","letters","map","letter","index","includes","toUpperCase"],"sources":["/home/mwiemers/dev/Hangman/src/components/WordLine.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\ntype Props = {\n  winWord: string;\n  finalWord: string[];\n};\n\ntype StyleProps = {\n  visible: boolean;\n};\n\nconst StyledLetter = styled.p`\n  font-size: 40px;\n  width: 40px;\n  margin-bottom: 5px;\n  margin-top: 0;\n  color: ${({ visible }: StyleProps) => (visible ? 'black' : 'transparent')};\n  border-bottom: black solid 2px;\n\n  ::selection {\n    background: transparent;\n    visibility: hidden;\n  }\n`;\n\nconst StyledLine = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  align-items: flex-end;\n  column-gap: 10px;\n  height: 60px;\n`;\n\nconst WordLine = ({ winWord, finalWord }: Props) => {\n  const [word, setWord] = useState<string[]>([]);\n\n  useEffect(() => {\n    const wordArray = Object.assign([], winWord);\n    setWord(wordArray);\n  }, [winWord]);\n\n  const letters = word.map((letter, index) => (\n    <StyledLetter\n      key={index}\n      visible={finalWord.includes(letter.toUpperCase())}\n    >\n      {letter.toUpperCase()}\n    </StyledLetter>\n  ));\n\n  return <StyledLine>{letters}</StyledLine>;\n};\n\nexport default WordLine;\n"],"mappings":"qRAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,MAAOC,OAAP,KAAmB,mBAAnB,C,2CAWA,GAAMC,aAAY,CAAGD,MAAM,CAACE,CAAV,iRAKP,kBAAGC,QAAH,MAAGA,OAAH,OAA8BA,QAAO,CAAG,OAAH,CAAa,aAAlD,EALO,CAAlB,CAcA,GAAMC,WAAU,CAAGJ,MAAM,CAACK,GAAV,mMAAhB,CASA,GAAMC,SAAQ,CAAG,QAAXA,SAAW,OAAmC,IAAhCC,QAAgC,OAAhCA,OAAgC,CAAvBC,SAAuB,OAAvBA,SAAuB,CAClD,cAAwBT,QAAQ,CAAW,EAAX,CAAhC,wCAAOU,IAAP,eAAaC,OAAb,eAEAZ,SAAS,CAAC,UAAM,CACd,GAAMa,UAAS,CAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,CAAkBN,OAAlB,CAAlB,CACAG,OAAO,CAACC,SAAD,CAAP,CACD,CAHQ,CAGN,CAACJ,OAAD,CAHM,CAAT,CAKA,GAAMO,QAAO,CAAGL,IAAI,CAACM,GAAL,CAAS,SAACC,MAAD,CAASC,KAAT,qBACvB,KAAC,YAAD,EAEE,OAAO,CAAET,SAAS,CAACU,QAAV,CAAmBF,MAAM,CAACG,WAAP,EAAnB,CAFX,UAIGH,MAAM,CAACG,WAAP,EAJH,EACOF,KADP,CADuB,EAAT,CAAhB,CASA,mBAAO,KAAC,UAAD,WAAaH,OAAb,EAAP,CACD,CAlBD,CAoBA,cAAeR,SAAf"},"metadata":{},"sourceType":"module"}