{"version":3,"sources":["components/line.tsx","components/Head.tsx","components/HangMan.tsx","components/Key.tsx","components/WordLine.tsx","helpers/keyboardkeys.tsx","helpers/validespecialletters.ts","App.tsx","index.tsx"],"names":["StyledLine","styled","div","height","visible","rotate","Line","Wrapper","StyledCircle","StyledFace","StyledEye","right","StyledMouth","DeadEye","p","Head","dead","OverWrapper","Body","Arm","Leg","Cable","LongStand","StandLeg","Hangman","visibleIndex","StyledKey","button","disabled","Key","value","onClick","StyledLetter","WordLine","winWord","finalWord","useState","word","setWord","useEffect","wordArray","Object","assign","letters","map","letter","index","includes","toUpperCase","KeyBoardKeys","line","specialLetters","ValideSpecialLetters","str","KeyboardLine","KeyBoard","Message","ResetButton","App","setValue","trys","setTrys","setFinalWord","message","setMessage","gameOver","setGameOver","wordAsArray","setWordAsArray","words","newArray","handleKeyDown","useCallback","event","key","match","code","ValidateSpecialLetters","length","every","l","oldArr","window","addEventListener","removeEventListener","KeyBoardLine","number","console","log","className","style","rootElement","document","getElementById","ReactDOMClient","render"],"mappings":"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","file":"static/js/main.8a2788cc.chunk.js","sourcesContent":["import styled from 'styled-components';\n\ntype Props = {\n  height: number;\n  visible?: boolean;\n  rotate?: number;\n};\n\nexport const StyledLine = styled.div`\n  background-color: black;\n  width: 3px;\n  height: ${({ height }: Props) => height && `${height}px`};\n  visibility: ${({ visible }: Props) => (visible ? 'inherit' : 'hidden')};\n  transform: rotate(\n    ${({ rotate }: Props) => (rotate ? `${rotate}deg` : 'rotate(0deg)')}\n  );\n`;\n\nconst Line = ({ height, visible, rotate }: Props): JSX.Element => {\n  return (\n    <StyledLine height={height} visible={visible} rotate={rotate}></StyledLine>\n  );\n};\n\nexport default Line;\n","import styled from 'styled-components';\n\ntype Props = {\n  visible: boolean;\n  dead: boolean;\n};\n\ntype FaceProps = {\n  right: boolean;\n};\n\nconst Wrapper = styled.div`\n  visibility: ${({ visible }: Partial<Props>) =>\n    visible ? 'inherit' : 'hidden'};\n`;\n\nconst StyledCircle = styled.div`\n  position: relative;\n  height: 75px;\n  width: 75px;\n  background-color: black;\n  border-radius: 50%;\n`;\n\nconst StyledFace = styled.div`\n  position: absolute;\n  left: 2px;\n  top: 2px;\n  height: 70px;\n  width: 70px;\n  background-color: white;\n  border-radius: 50%;\n`;\n\nconst StyledEye = styled.div`\n  position: absolute;\n  left: ${({ right }: Partial<FaceProps>) => (right ? '50px' : '15px')};\n  top: 20px;\n  height: 5px;\n  width: 5px;\n  background-color: black;\n  border-radius: 50%;\n`;\n\nconst StyledMouth = styled.div`\n  position: absolute;\n  left: 20px;\n  top: 50px;\n  height: 5px;\n  width: 30px;\n  background-color: black;\n`;\n\nconst DeadEye = styled.p`\n  font-weight: bold;\n  position: absolute;\n  left: ${({ right }: Partial<FaceProps>) => (right ? '46px' : '13px')};\n  top: 20px;\n  margin: 0;\n`;\n\nconst Head = ({ visible, dead }: Props): JSX.Element => {\n  return (\n    <Wrapper visible={visible}>\n      <StyledCircle>\n        <StyledFace>\n          {dead ? <DeadEye>X</DeadEye> : <StyledEye />}\n          {dead ? <DeadEye right>X</DeadEye> : <StyledEye right />}\n          <StyledMouth />\n        </StyledFace>\n      </StyledCircle>\n    </Wrapper>\n  );\n};\n\nexport default Head;\n","import styled from 'styled-components';\nimport Line, { StyledLine } from './line';\nimport Head from './Head';\n\ntype Props = {\n  visibleIndex: number;\n  dead: boolean;\n};\n\ntype StyleTypes = {\n  right?: boolean;\n};\n\nconst OverWrapper = styled.div`\n  height: 250px;\n`;\n\nconst Wrapper = styled.div`\n  position: relative;\n  left: 50%;\n  transform: translate(-50%);\n  width: max-content;\n`;\n\nconst Body = styled.div`\n  position: absolute;\n  left: 50%;\n  transform: translate(-50%);\n`;\n\nconst Arm = styled(StyledLine)`\n  position: absolute;\n  left: ${({ right }: StyleTypes) => (right ? '55px' : '18px')};\n  top: 70px;\n`;\n\nconst Leg = styled(StyledLine)`\n  position: absolute;\n  left: ${({ right }: StyleTypes) => (right ? '55px' : '18px')};\n  top: 135px;\n`;\n\nconst Cable = styled(StyledLine)`\n  position: absolute;\n  top: -30%;\n  left: -20px;\n`;\n\nconst LongStand = styled(StyledLine)`\n  position: absolute;\n  top: 35%;\n  left: -70px;\n`;\n\nconst StandLeg = styled(StyledLine)`\n  position: absolute;\n  left: ${({ right }: StyleTypes) => (right ? '-52px' : '-88px')};\n  top: 168px;\n`;\n\nconst Hangman = ({ visibleIndex, dead }: Props): JSX.Element => {\n  return (\n    <OverWrapper>\n      <Wrapper>\n        <StandLeg visible={visibleIndex < 10} height={50} rotate={45} />\n        <StandLeg\n          right={visibleIndex < 9}\n          visible={visibleIndex < 9}\n          height={50}\n          rotate={-45}\n        />\n        <LongStand visible={visibleIndex < 8} height={150} />\n        <Cable visible={visibleIndex < 7} height={100} rotate={90} />\n        <Head dead={dead} visible={visibleIndex < 6} />\n        <Body>\n          <Line visible={visibleIndex < 5} height={70} />\n        </Body>\n        <Arm visible={visibleIndex < 4} height={50} rotate={45} />\n        <Arm\n          right={visibleIndex < 3}\n          visible={visibleIndex < 3}\n          height={50}\n          rotate={-45}\n        />\n        <Leg visible={visibleIndex < 2} height={50} rotate={45} />\n        <Leg\n          right={visibleIndex < 1}\n          visible={visibleIndex < 1}\n          height={50}\n          rotate={-45}\n        />\n      </Wrapper>\n    </OverWrapper>\n  );\n};\n\nexport default Hangman;\n","import styled from 'styled-components';\n\ntype Props = {\n  value: string;\n  onClick(): void;\n  disabled: boolean;\n};\n\nconst StyledKey = styled.button`\n  border: black solid 1px;\n  width: 40px;\n  border-bottom: red solid 2px;\n  background-color: ${({ disabled }: Partial<Props>) =>\n    disabled ? 'white' : 'black'};\n  font-size: 24px;\n  font-weight: bold;\n  color: ${({ disabled }: Partial<Props>) => (disabled ? 'red' : 'white')};\n  margin: 2px;\n`;\n\nconst Key = ({ value, onClick, disabled }: Props): JSX.Element => {\n  return (\n    <StyledKey disabled={disabled} onClick={onClick}>\n      {value}\n    </StyledKey>\n  );\n};\n\nexport default Key;\n","import { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\ntype Props = {\n  winWord: string;\n  finalWord: string[];\n};\n\ntype StyleProps = {\n  visible: boolean;\n};\n\nconst StyledLetter = styled.p`\n  font-size: 12px;\n  width: 12px;\n  margin-bottom: 5px;\n  margin-top: 0;\n  color: ${({ visible }: StyleProps) => (visible ? 'black' : 'transparent')};\n  border-bottom: black solid 2px;\n\n  ::selection {\n    background: transparent;\n    visibility: hidden;\n  }\n`;\n\nconst StyledLine = styled.div`\n  display: flex;\n  background-color: green;\n  justify-content: center;\n  align-items: flex-end;\n  column-gap: 5px;\n  height: 60px;\n`;\n\nconst WordLine = ({ winWord, finalWord }: Props): JSX.Element => {\n  const [word, setWord] = useState<string[]>([]);\n\n  useEffect(() => {\n    const wordArray = Object.assign([], winWord);\n    setWord(wordArray);\n  }, [winWord]);\n\n  const letters = word.map((letter, index) => (\n    <StyledLetter\n      key={index}\n      visible={finalWord.includes(letter.toUpperCase())}\n    >\n      {letter.toUpperCase()}\n    </StyledLetter>\n  ));\n\n  return <StyledLine>{letters}</StyledLine>;\n};\n\nexport default WordLine;\n","type Props = { value: string; line: number }[];\n\nconst KeyBoardKeys: Props = [\n  { value: \"Q\", line: 1 },\n  { value: \"W\", line: 1 },\n  { value: \"E\", line: 1 },\n  { value: \"R\", line: 1 },\n  { value: \"T\", line: 1 },\n  { value: \"Z\", line: 1 },\n  { value: \"U\", line: 1 },\n  { value: \"I\", line: 1 },\n  { value: \"O\", line: 1 },\n  { value: \"P\", line: 1 },\n  { value: \"Ü\", line: 1 },\n  { value: \"A\", line: 2 },\n  { value: \"S\", line: 2 },\n  { value: \"D\", line: 2 },\n  { value: \"F\", line: 2 },\n  { value: \"G\", line: 2 },\n  { value: \"H\", line: 2 },\n  { value: \"J\", line: 2 },\n  { value: \"K\", line: 2 },\n  { value: \"L\", line: 2 },\n  { value: \"Ö\", line: 2 },\n  { value: \"Ä\", line: 2 },\n  { value: \"Y\", line: 3 },\n  { value: \"X\", line: 3 },\n  { value: \"C\", line: 3 },\n  { value: \"V\", line: 3 },\n  { value: \"B\", line: 3 },\n  { value: \"N\", line: 3 },\n  { value: \"M\", line: 3 }\n];\n\nexport default KeyBoardKeys;\n","const specialLetters = [\"Ä\", \"ä\", \"Ö\", \"ö\", \"Ü\", \"ü\"];\n\nconst ValideSpecialLetters = (str: string): boolean => {\n  return specialLetters.includes(str) ? true : false;\n};\n\nexport default ValideSpecialLetters;\n","import './styles.css';\nimport styled from 'styled-components';\nimport { useCallback, useEffect, useState } from 'react';\nimport Hangman from './components/HangMan';\nimport Key from './components/Key';\nimport WordLine from './components/WordLine';\nimport KeyBoardKeys from './helpers/keyboardkeys';\nimport ValidateSpecialLetters from './helpers/validespecialletters';\nimport getRandomWord from './helpers/getRandomWord';\n\nconst KeyboardLine = styled.div``;\n\nconst KeyBoard = styled.div`\n  width: 90%;\n`;\n\nconst Message = styled.div`\n  position: absolute;\n  z-index: 10;\n  display: flex;\n  flex-direction: column;\n  background-color: white;\n  height: 90vh;\n  width: 90%;\n  font-size: 40px;\n  font-weight: bold;\n  align-items: center;\n  justify-content: center;\n  row-gap: 2rem;\n  margin-left: auto;\n  margin-right: auto;\n  left: 0;\n  right: 0;\n  text-align: center;\n\n  @media only screen and (min-width: 768px) {\n    opacity: 0.9;\n  }\n`;\n\nconst ResetButton = styled.button`\n  border: none;\n  background-color: black;\n  color: white;\n  font-size: 1.5rem;\n  border-radius: 10px;\n  padding: 0.5rem 1rem;\n`;\n\nexport default function App(): JSX.Element {\n  const [value, setValue] = useState<string>('');\n  const [trys, setTrys] = useState<number>(10);\n  const [finalWord, setFinalWord] = useState<string[]>([]);\n  const [message, setMessage] = useState<string>('');\n  const [gameOver, setGameOver] = useState<boolean>(false);\n  const [word, setWord] = useState<string>('Aktiengesellschaft');\n  const [wordAsArray, setWordAsArray] = useState<string[]>([]);\n\n  const words = () => {\n    // const newWord = getRandomWord().toUpperCase();\n    const newWord = 'Aktiengesellschaft';\n    setWord(newWord);\n\n    const newArray = Object.assign([], word);\n    setWordAsArray(newArray);\n  };\n\n  useEffect(() => {\n    words();\n  }, [word]);\n\n  const handleKeyClick = (key: string) => {\n    console.log(word);\n    if (!word?.includes(key)) {\n      setTrys(trys - 1);\n    }\n    setValue(key);\n  };\n\n  const handleKeyDown = useCallback(\n    (event) => {\n      const key = event.key;\n\n      if (finalWord.includes(key.toUpperCase())) {\n        return;\n      }\n      if (!word?.includes(key.toUpperCase())) {\n        setTrys(trys - 1);\n      }\n      if (\n        (key.match('[A-Za-z]') && event.code.includes('Key')) ||\n        ValidateSpecialLetters(key)\n      ) {\n        setValue(key.toUpperCase());\n      } else {\n        setValue('');\n      }\n    },\n    [trys, finalWord, word]\n  );\n\n  const reset = () => {\n    setTrys(10);\n    words();\n    setMessage('');\n    setFinalWord([]);\n    setValue('');\n    setGameOver(false);\n  };\n\n  useEffect(() => {\n    if (wordAsArray.length === 0) {\n      return;\n    }\n    if (wordAsArray.every((l) => finalWord.includes(l))) {\n      setMessage('Du hast gewonnen!');\n    }\n  }, [finalWord, wordAsArray]);\n\n  useEffect(() => {\n    if (trys === 0) {\n      setGameOver(true);\n      setMessage(`Du hast verloren! Das Wort war: ${word}`);\n    }\n  }, [trys]);\n\n  useEffect(() => {\n    setFinalWord((oldArr) => [value, ...oldArr]);\n  }, [value]);\n\n  useEffect(() => {\n    if (window) {\n      window.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleKeyDown]);\n\n  const KeyBoardLine = (number: number) =>\n    KeyBoardKeys.map(\n      (value) =>\n        number === value.line && (\n          <Key\n            disabled={finalWord.includes(value.value)}\n            onClick={() => handleKeyClick(value.value)}\n            value={value.value}\n          />\n        )\n    );\n\n  return (\n    <div className=\"App\">\n      {message && (\n        <Message>\n          {message}\n          <ResetButton onClick={reset}>Noch mal</ResetButton>\n        </Message>\n      )}\n      <h1>Hangman</h1>\n      <div style={{ height: 'min-content' }}>\n        <Hangman visibleIndex={trys} dead={gameOver} />\n      </div>\n      <KeyBoard>\n        <KeyboardLine>{KeyBoardLine(1)}</KeyboardLine>\n        <KeyboardLine>{KeyBoardLine(2)}</KeyboardLine>\n        <KeyboardLine>{KeyBoardLine(3)}</KeyboardLine>\n      </KeyBoard>\n\n      <WordLine winWord={word ? word : 'Kompromiss'} finalWord={finalWord} />\n      <p>Du hast noch {trys} Versuche</p>\n    </div>\n  );\n}\n","import { StrictMode } from 'react';\nimport * as ReactDOMClient from 'react-dom/client';\n\nimport App from './App';\n\nconst rootElement = document.getElementById('root');\nconst root = ReactDOMClient.createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}