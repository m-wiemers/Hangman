{"version":3,"sources":["components/line.tsx","components/Head.tsx","components/HangMan.tsx","components/Key.tsx","components/WordLine.tsx","helpers/keyboardkeys.tsx","helpers/validespecialletters.ts","words/wordlist.ts","helpers/getRandomWord.tsx","App.tsx","index.tsx"],"names":["StyledLine","styled","div","height","visible","rotate","Line","Wrapper","StyledCircle","StyledFace","StyledEye","right","StyledMouth","DeadEye","p","Head","dead","OverWrapper","Body","Arm","Leg","Cable","LongStand","StandLeg","Hangman","visibleIndex","StyledKey","button","disabled","Key","value","onClick","StyledLetter","WordLine","winWord","finalWord","useState","word","setWord","useEffect","wordArray","Object","assign","letters","map","letter","index","includes","toUpperCase","KeyBoardKeys","line","specialLetters","ValideSpecialLetters","str","WordList","getRandomWord","randomNumber","Math","floor","random","wordlist","length","KeyboardLine","Message","ResetButton","App","setValue","trys","setTrys","setFinalWord","message","setMessage","gameOver","setGameOver","wordAsArray","setWordAsArray","words","newWord","newArray","handleKeyDown","useCallback","event","key","match","code","ValidateSpecialLetters","every","l","oldArr","window","addEventListener","removeEventListener","KeyBoardLine","number","console","log","className","style","rootElement","document","getElementById","ReactDOMClient","render"],"mappings":"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","file":"static/js/main.b508bd34.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\ntype Props = {\n  height: number;\n  visible?: boolean;\n  rotate?: number;\n};\n\nexport const StyledLine = styled.div`\n  background-color: black;\n  width: 3px;\n  height: ${({ height }: Props) => height && `${height}px`};\n  visibility: ${({ visible }: Props) => (visible ? \"inherit\" : \"hidden\")};\n  transform: rotate(\n    ${({ rotate }: Props) => (rotate ? `${rotate}deg` : \"rotate(0deg)\")}\n  );\n`;\n\nconst Line = ({ height, visible, rotate }: Props) => {\n  return <StyledLine height={height} visible={visible} rotate={rotate}></StyledLine>\n};\n\nexport default Line;\n","import styled from 'styled-components';\n\ntype Props = {\n  visible: boolean;\n  dead: boolean;\n};\n\ntype FaceProps = {\n  right: boolean;\n};\n\nconst Wrapper = styled.div`\n  visibility: ${({ visible }: Partial<Props>) =>\n    visible ? 'inherit' : 'hidden'};\n`;\n\nconst StyledCircle = styled.div`\n  position: relative;\n  height: 75px;\n  width: 75px;\n  background-color: black;\n  border-radius: 50%;\n`;\n\nconst StyledFace = styled.div`\n  position: absolute;\n  left: 2px;\n  top: 2px;\n  height: 70px;\n  width: 70px;\n  background-color: white;\n  border-radius: 50%;\n`;\n\nconst StyledEye = styled.div`\n  position: absolute;\n  left: ${({ right }: Partial<FaceProps>) => (right ? '50px' : '15px')};\n  top: 20px;\n  height: 5px;\n  width: 5px;\n  background-color: black;\n  border-radius: 50%;\n`;\n\nconst StyledMouth = styled.div`\n  position: absolute;\n  left: 20px;\n  top: 50px;\n  height: 5px;\n  width: 30px;\n  background-color: black;\n`;\n\nconst DeadEye = styled.p`\n  font-weight: bold;\n  position: absolute;\n  left: ${({ right }: Partial<FaceProps>) => (right ? '46px' : '13px')};\n  top: 20px;\n  margin: 0;\n`;\n\nconst Head = ({ visible, dead }: Props) => {\n  return (\n    <Wrapper visible={visible}>\n      <StyledCircle>\n        <StyledFace>\n          {dead ? <DeadEye>X</DeadEye> : <StyledEye />}\n          {dead ? <DeadEye right>X</DeadEye> : <StyledEye right />}\n          <StyledMouth />\n        </StyledFace>\n      </StyledCircle>\n    </Wrapper>\n  );\n};\n\nexport default Head;\n","import styled from 'styled-components';\nimport Line, { StyledLine } from './line';\nimport Head from './Head';\n\ntype Props = {\n  visibleIndex: number;\n  dead: boolean;\n};\n\ntype StyleTypes = {\n  right?: boolean;\n};\n\nconst OverWrapper = styled.div`\n  height: 250px;\n`;\n\nconst Wrapper = styled.div`\n  position: relative;\n  left: 50%;\n  transform: translate(-50%);\n  width: max-content;\n`;\n\nconst Body = styled.div`\n  position: absolute;\n  left: 50%;\n  transform: translate(-50%);\n`;\n\nconst Arm = styled(StyledLine)`\n  position: absolute;\n  left: ${({ right }: StyleTypes) => (right ? '55px' : '18px')};\n  top: 70px;\n`;\n\nconst Leg = styled(StyledLine)`\n  position: absolute;\n  left: ${({ right }: StyleTypes) => (right ? '55px' : '18px')};\n  top: 135px;\n`;\n\nconst Cable = styled(StyledLine)`\n  position: absolute;\n  top: -30%;\n  left: -20px;\n`;\n\nconst LongStand = styled(StyledLine)`\n  position: absolute;\n  top: 35%;\n  left: -70px;\n`;\n\nconst StandLeg = styled(StyledLine)`\n  position: absolute;\n  left: ${({ right }: StyleTypes) => (right ? '-52px' : '-88px')};\n  top: 168px;\n`;\n\nconst Hangman = ({ visibleIndex, dead }: Props) => {\n  return (\n    <OverWrapper>\n      <Wrapper>\n        <StandLeg visible={visibleIndex < 10} height={50} rotate={45} />\n        <StandLeg\n          right={visibleIndex < 9}\n          visible={visibleIndex < 9}\n          height={50}\n          rotate={-45}\n        />\n        <LongStand visible={visibleIndex < 8} height={150} />\n        <Cable visible={visibleIndex < 7} height={100} rotate={90} />\n        <Head dead={dead} visible={visibleIndex < 6} />\n        <Body>\n          <Line visible={visibleIndex < 5} height={70} />\n        </Body>\n        <Arm visible={visibleIndex < 4} height={50} rotate={45} />\n        <Arm\n          right={visibleIndex < 3}\n          visible={visibleIndex < 3}\n          height={50}\n          rotate={-45}\n        />\n        <Leg visible={visibleIndex < 2} height={50} rotate={45} />\n        <Leg\n          right={visibleIndex < 1}\n          visible={visibleIndex < 1}\n          height={50}\n          rotate={-45}\n        />\n      </Wrapper>\n    </OverWrapper>\n  );\n};\n\nexport default Hangman;\n","import styled from 'styled-components';\n\ntype Props = {\n  value: string;\n  onClick(): void;\n  disabled: boolean;\n};\n\nconst StyledKey = styled.button`\n  border: black solid 1px;\n  width: 40px;\n  border-bottom: red solid 2px;\n  background-color: ${({ disabled }: Partial<Props>) =>\n    disabled ? 'white' : 'black'};\n  font-size: 24px;\n  font-weight: bold;\n  color: ${({ disabled }: Partial<Props>) => (disabled ? 'red' : 'white')};\n  margin: 2px;\n`;\n\nconst Key = ({ value, onClick, disabled }: Props) => {\n  return (\n    <StyledKey disabled={disabled} onClick={onClick}>\n      {value}\n    </StyledKey>\n  );\n};\n\nexport default Key;\n","import { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\ntype Props = {\n  winWord: string;\n  finalWord: string[];\n};\n\ntype StyleProps = {\n  visible: boolean;\n};\n\nconst StyledLetter = styled.p`\n  font-size: 40px;\n  width: 40px;\n  margin-bottom: 5px;\n  margin-top: 0;\n  color: ${({ visible }: StyleProps) => (visible ? 'black' : 'transparent')};\n  border-bottom: black solid 2px;\n\n  ::selection {\n    background: transparent;\n    visibility: hidden;\n  }\n`;\n\nconst StyledLine = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  align-items: flex-end;\n  column-gap: 10px;\n  height: 60px;\n`;\n\nconst WordLine = ({ winWord, finalWord }: Props) => {\n  const [word, setWord] = useState<string[]>([]);\n\n  useEffect(() => {\n    const wordArray = Object.assign([], winWord);\n    setWord(wordArray);\n  }, [winWord]);\n\n  const letters = word.map((letter, index) => (\n    <StyledLetter\n      key={index}\n      visible={finalWord.includes(letter.toUpperCase())}\n    >\n      {letter.toUpperCase()}\n    </StyledLetter>\n  ));\n\n  return <StyledLine>{letters}</StyledLine>;\n};\n\nexport default WordLine;\n","type Props = { value: string; line: number }[];\n\nconst KeyBoardKeys: Props = [\n  { value: \"Q\", line: 1 },\n  { value: \"W\", line: 1 },\n  { value: \"E\", line: 1 },\n  { value: \"R\", line: 1 },\n  { value: \"T\", line: 1 },\n  { value: \"Z\", line: 1 },\n  { value: \"U\", line: 1 },\n  { value: \"I\", line: 1 },\n  { value: \"O\", line: 1 },\n  { value: \"P\", line: 1 },\n  { value: \"Ü\", line: 1 },\n  { value: \"A\", line: 2 },\n  { value: \"S\", line: 2 },\n  { value: \"D\", line: 2 },\n  { value: \"F\", line: 2 },\n  { value: \"G\", line: 2 },\n  { value: \"H\", line: 2 },\n  { value: \"J\", line: 2 },\n  { value: \"K\", line: 2 },\n  { value: \"L\", line: 2 },\n  { value: \"Ö\", line: 2 },\n  { value: \"Ä\", line: 2 },\n  { value: \"Y\", line: 3 },\n  { value: \"X\", line: 3 },\n  { value: \"C\", line: 3 },\n  { value: \"V\", line: 3 },\n  { value: \"B\", line: 3 },\n  { value: \"N\", line: 3 },\n  { value: \"M\", line: 3 }\n];\n\nexport default KeyBoardKeys;\n","const specialLetters = [\"Ä\", \"ä\", \"Ö\", \"ö\", \"Ü\", \"ü\"];\n\nconst ValideSpecialLetters = (str: string): boolean => {\n  return specialLetters.includes(str) ? true : false;\n};\n\nexport default ValideSpecialLetters;\n","const WordList: string[] = [\n  \"Bordstein\",\n  \"Programmieren\",\n  \"Territorium\",\n  \"Wanduhr\",\n  \"Haushaltskasse\",\n  \"Batman\",\n  \"Kinofilm\"\n];\n\nexport default WordList;\n","import wordlist from '../words/wordlist';\n\nconst getRandomWord = () => {\n  const randomNumber = Math.floor(Math.random() * wordlist.length);\n  const newWord = wordlist[randomNumber];\n  return newWord;\n};\n\nexport default getRandomWord;\n","import './styles.css';\nimport styled from 'styled-components';\nimport { useCallback, useEffect, useState } from 'react';\nimport Hangman from './components/HangMan';\nimport Key from './components/Key';\nimport WordLine from './components/WordLine';\nimport KeyBoardKeys from './helpers/keyboardkeys';\nimport ValidateSpecialLetters from './helpers/validespecialletters';\nimport getRandomWord from './helpers/getRandomWord';\n\nconst KeyboardLine = styled.div``;\n\nconst Message = styled.div`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  background-color: gray;\n  height: 100vh;\n  width: 90%;\n  font-size: 40px;\n  font-weight: bold;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst ResetButton = styled.button`\n  border: none;\n  background-color: black;\n  color: white;\n  font-size: 1.5rem;\n  border-radius: 10px;\n  padding: 0.5rem 1rem;\n`;\n\nexport default function App() {\n  const [value, setValue] = useState<string>('');\n  const [trys, setTrys] = useState<number>(10);\n  const [finalWord, setFinalWord] = useState<string[]>([]);\n  const [message, setMessage] = useState<string>('');\n  const [gameOver, setGameOver] = useState<boolean>(false);\n  const [word, setWord] = useState<string>();\n  const [wordAsArray, setWordAsArray] = useState<string[]>([]);\n\n  const words = () => {\n    const newWord = getRandomWord().toUpperCase();\n    setWord(newWord);\n\n    const newArray = Object.assign([], word);\n    setWordAsArray(newArray);\n  };\n\n  useEffect(() => {\n    words();\n  }, [word]);\n\n  const handleKeyClick = (key: string) => {\n    console.log(word);\n    if (!word?.includes(key)) {\n      setTrys(trys - 1);\n    }\n    setValue(key);\n  };\n\n  const handleKeyDown = useCallback(\n    (event) => {\n      const key = event.key;\n\n      if (finalWord.includes(key.toUpperCase())) {\n        return;\n      }\n      if (!word?.includes(key.toUpperCase())) {\n        setTrys(trys - 1);\n      }\n      if (\n        (key.match('[A-Za-z]') && event.code.includes('Key')) ||\n        ValidateSpecialLetters(key)\n      ) {\n        setValue(key.toUpperCase());\n      } else {\n        setValue('');\n      }\n    },\n    [trys, finalWord, word]\n  );\n\n  const reset = () => {\n    setTrys(10);\n    words();\n    setMessage('');\n    setFinalWord([]);\n    setValue('');\n    setGameOver(false);\n  };\n\n  useEffect(() => {\n    if (wordAsArray.length === 0) {\n      return;\n    }\n    if (wordAsArray.every((l) => finalWord.includes(l))) {\n      setMessage('Du hast gewonnen!');\n    }\n  }, [finalWord, wordAsArray]);\n\n  useEffect(() => {\n    if (trys === 0) {\n      setGameOver(true);\n      setMessage('Du hast verloren');\n    }\n  }, [trys]);\n\n  useEffect(() => {\n    setFinalWord((oldArr) => [value, ...oldArr]);\n  }, [value]);\n\n  useEffect(() => {\n    if (window) {\n      window.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleKeyDown]);\n\n  const KeyBoardLine = (number: number) =>\n    KeyBoardKeys.map(\n      (value) =>\n        number === value.line && (\n          <Key\n            disabled={finalWord.includes(value.value)}\n            onClick={() => handleKeyClick(value.value)}\n            value={value.value}\n          />\n        )\n    );\n\n  return (\n    <div className=\"App\">\n      {message && (\n        <Message>\n          {message}\n          <ResetButton onClick={reset}>Noch mal</ResetButton>\n        </Message>\n      )}\n      <h1>Hangman</h1>\n      <div style={{ height: 'min-content' }}>\n        <Hangman visibleIndex={trys} dead={gameOver} />\n      </div>\n      <KeyboardLine>{KeyBoardLine(1)}</KeyboardLine>\n      <KeyboardLine>{KeyBoardLine(2)}</KeyboardLine>\n      <KeyboardLine>{KeyBoardLine(3)}</KeyboardLine>\n\n      <WordLine winWord={word ? word : 'Kompromiss'} finalWord={finalWord} />\n      <p>Du hast noch {trys} Versuche</p>\n    </div>\n  );\n}\n","import { StrictMode } from 'react';\nimport * as ReactDOMClient from 'react-dom/client';\n\nimport App from './App';\n\nconst rootElement = document.getElementById('root');\nconst root = ReactDOMClient.createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}